#!/usr/bin/php
<?php
// check for params
$options = getopt('c:e::a:t:', array('config:', 'env::', 'action:', 'type:'));

// check on configuration file to load
if (!empty($options['config']) || !empty($options['c'])) {
    // attempt to load the file
    $file = !empty($options['config']) ? $options['config'] : $options['c'];
    if (!file_exists($file)) {
        throw new Exception('Config file does not exist: ' . $file);
    }

    $config = include_once($file);

    // check on whether we need to load a specific environmental within the config
    $environment = !empty($options['env'])
        ? $options['env'] : (!empty($options['e'])
            ? $options['e']
            : FALSE);
    define('ENVIRONMENT', $environment);

    // set config to environment
    if (ENVIRONMENT && isset($config[ENVIRONMENT])) {
        $config = $config[ENVIRONMENT];
    }
}

// check for the action
if (!empty($options['action']) || !empty($options['a'])) {

    // the modules we end up merging
    $modules = array();

    // retrieve action and see if we have multiple
    $action = !empty($options['action']) ? $options['action'] : $options['a'];
    $action = explode(',', $action);
    $action = array_map('trim', $action);

    // check for type
    $type = !empty($options['type'])
        ? $options['type']
        : (!empty($options['t'])
            ? $options['t']
            : NULL);

    if (!empty($type)) {
        $type = explode(',', $type);
        $type = array_map('trim', $type);
    }


    // iterate over all actions to add to module
    foreach ($action as $a) {

        // get copy of config
        $config = array($a => isset($config[$a]) ? $config[$a] : array());

        // merge with type, if applicable
        if (!empty($type)) {
            if (isset($config['config'])) {
                $config['config']['type'] = $type;
            } else {
                $config['config'] = array(
                    'type' => $type
                );
            }
        }

        // check for module action config options from file
        $modules = array_merge($modules, $config);

    }

    // check if the config file has customPaths for the autoloader
    $customPaths = isset($config['customPaths']) ? $config['customPaths'] : array();

    // check if we actually have modules to run
    if (!empty($modules)) {
        //require(APPPATH . 'Rebuilder/Core.php');
        $rebuilder = new \Rebuilder\Core($modules, $customPaths);
        $rebuilder->run();
    }

}

die('Rebuilder CLI has completed.');
